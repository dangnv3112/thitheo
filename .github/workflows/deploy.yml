name: Deploy Next.js App to GitHub Pages

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          # Sử dụng npm install thay vì npm ci để cập nhật lock file
          npm install --legacy-peer-deps
          # Cài đặt các dependency bị thiếu
          npm install tailwindcss framer-motion aos --legacy-peer-deps
          # Cài đặt sharp cho xử lý hình ảnh tối ưu
          npm install sharp --force
          
      - name: Check installed packages
        run: npm list tailwindcss framer-motion aos
        
      - name: Clean build directory
        run: |
          rm -rf .next
          rm -rf out
        
      - name: Build Next.js app
        run: |
          echo "Bắt đầu xây dựng ứng dụng Next.js..."
          npm run build || (
            echo "Build chính thức thất bại, đang tạo trang fallback..."
            mkdir -p out
            echo "<html><head><title>Tho Giò - Đang bảo trì</title></head><body><h1>Trang web đang được bảo trì</h1><p>Vui lòng quay lại sau.</p></body></html>" > out/index.html
            echo "<html><head><title>Tho Giò - Không tìm thấy trang</title></head><body><h1>Không tìm thấy trang</h1><p>Vui lòng quay lại <a href='/thitheo/'>trang chủ</a>.</p></body></html>" > out/404.html
          )
          
      - name: Copy static assets
        run: |
          echo "Đang sao chép các tài nguyên tĩnh..."
          # Đảm bảo thư mục hình ảnh được sao chép đúng cách
          mkdir -p out/images
          cp -r public/images out/ || true
          mkdir -p out/images/products
          mkdir -p out/images/categories
          mkdir -p out/images/banner
          touch out/.nojekyll
          
      - name: Check output directory
        run: ls -la out/
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 